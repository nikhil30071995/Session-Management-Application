trigger SendConfirmationEmail on Session_Speaker__c (after insert,before insert,before update) {
    if(Trigger.isAfter){
    for(session_speaker__c s:Trigger.new)
    {
        session_speaker__c sessionSpeaker=[select Session__r.Name,speaker__r.email__c,session__r.session_date__c from session_speaker__c where id=:s.id ];
        String email=sessionSpeaker.speaker__r.email__c;
        if(email!= null){
            string subject='Speaker Confirmation';
            string body='You have been assigned for'+' '+sessionSpeaker.Session__r.Name+' '+'on'+sessionSpeaker.session__r.session_date__c;
            EmailManager.sendEmail(email, subject, body);
        }
    }
    }
    if(Trigger.isBefore){
        for(session_speaker__c s:Trigger.new){
        session__c session=[select id,Session_Date__c from session__c where id=:s.Session__c];
        speaker__c speaker=[select id from speaker__c where id=:s.speaker__c];
        List<session_speaker__c> conflicts=[select id from session_speaker__c where session__r.Session_Date__c=:session.Session_Date__c
                                           and speaker__c=:speaker.id];
            if(!conflicts.isEmpty()){
                s.addError('The speaker is already assigned');
            }
        }
    }
}
